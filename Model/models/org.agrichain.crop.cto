namespace org.agrichain.crop

import org.agrichain.participants.AgriChainParticipant
import org.agrichain.participants.Farmer
import org.agrichain.participants.Wholesaler
import org.agrichain.participants.Retailer

asset Crop identified by cropID {

  o String cropID
  o CropType type
  o Boolean organic
  o String seedManufacturer optional
  o DateTime plantingDate optional
  o DateTime pickupDate optional

  --> AgriChainParticipant owner
  --> Farm farm
  --> Treatment[] treatments optional
  --> Irrigation[] irrigations optional
  --> Batch[] batches optional
}

asset Batch identified by batchID {

  o String batchID
  o String storage optional
  o Double weight optional
  o Double bultos 
  o DateTime batchDate
  o Boolean used optional

  --> Packet[] packets optional
  --> AgriChainParticipant owner 
  --> Crop crop
}

asset Packet identified by packetID {
  o String packetID
  o DateTime packingDate
  o Double size
  o DateTime expireDate
  o CropType type
  o String finalLocation optional
  o Boolean organic
  o Boolean used default = false

  --> Shipment shipment optional
  --> AgriChainParticipant owner
  --> Batch batchID
}

asset Shipment identified by shipmentID {
  o String shipmentID
  o DateTime shippedDate
  o DateTime arrivalDate optional
  o String[] locations optional
  o Double[] temperatures optional
  o String status optional
  --> Packet[] packets optional

  --> Wholesaler seller
  --> Retailer buyer
}

asset Farm identified by farmID {
  o String farmID
  o String nickname optional
  o String location
  o Double size
  o String poligono
  o String parcela
  o String[] certifications

  --> Farmer farmerID
}

asset Product identified by productID {
  o String productID
  o String productName
  o String productmanufacturer
  
}

asset Treatment identified by treatmentID {

  o String treatmentID
  o DateTime treatmentDate
  o String invoice
  o Product[] products optional
  --> Crop crop
}

asset Irrigation identified by irrigationID{
  o String irrigationID
  o DateTime irrigationDate
  o Double nitrogenKGs optional
  o Double phosporousKGs optional
  o Double potassiumKGs optional
  --> Product[] products optional

  --> Crop crop
}

enum CropType {
  o Cucumber
  o Watermelon
  o Tomato
  o Melon
  o Courgette
  o Aubergine
  o Pepper
}


transaction addIrrigation {
  --> Irrigation irr
  --> Crop crop
} 

transaction addTreatment {
  --> Treatment trt
  --> Crop crop
}

transaction transferCrops {
  --> Crop crop
  --> AgriChainParticipant newOwner
}

transaction notifyParties {
 --> Crop crop
 --> Packet[] packets
}

transaction processBatch {
  --> Batch batch
  o String storage
  o Double weight
}

transaction getPacketsFromType {
  o CropType type

}

transaction packetsForShipment {
  o Shipment shipment
  o String[] products
  o Boolean[] organic
  o Double[] quantity

}

transaction updatePosition {
  -->Shipment shipment
  o String location
  o Double temperature
}

transaction updatePackets {
 o Packet[] packets
}
  
transaction productRecall {
  --> Packet packet
  o String description
}

transaction foodTraceFunc{
  -->Packet packet
}

event batchProcessed {
  --> Batch batch
  --> Crop crop
  o Double weight
}

event shipmentUpdate {
  --> Shipment shipment
  o String location
  o Double temperature
}
  
  event prodRecallRetailer {
  --> Packet[] packetsAffected
  o String reason
}
 
  event prodRecallWholesaler {
   --> Packet packetAffected
  
  --> Packet[] packetsAffectedShipment
  --> Packet[] packetsAffectedBatch
  --> Packet[] packetsAffectedCrop
  --> Retailer[] customersAffected
  o String reason
}
  
  event prodRecallFarmer{
  -->Batch batchAffected
}
  
  event foodTrace{
  o Packet packet
  o DateTime pickupDate
  o Farmer farmer
  o Farm farm
}
